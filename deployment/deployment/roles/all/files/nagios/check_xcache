#!/usr/bin/env perl

use warnings;
use strict;

use Getopt::Long qw(:config gnu_getopt);
use Nagios::Plugin;
use LWP::UserAgent;

my $VERSION="0.1";
my $np;

$np = Nagios::Plugin->new(
    usage => "Usage: %s [--host|-H <host>] [ -c|--critical=<threshold> ] [ -w|--warning=<threshold>] [-?|--usage] [-h|--help] [-t|--timeout=<timeout>]",
    version => $VERSION,
    blurb => 'Checks XCache status, via patch XCache admin interface',
    license => "BSD",
    shortname => "CHECK_XCACHE",
);

$np->add_arg(
    spec => 'host|H=s',
    help => q(URL of host indicated in STRING),
    required => 0,
    default => 'http://localhost/xcache-admin?format=text',
);

$np->add_arg(
    spec => 'critical|c=s',
    help => q(Exit with CRITICAL status if replication delay is greater than INTEGER),
    required => 0,
    default => 10,
);

$np->add_arg(
    spec => 'warning|w=s',
    help => q(Exit with WARNING status if replication delay is greater than INTEGER),
    required => 0,
    default => 1,
);

# Setup
$np->getopts;
my $ng = $np->opts;
alarm $ng->timeout;

# Configure
my $host = $ng->get('host');

my $code = OK;
my $msg = "Everything is OK";
my $perfdata;

# Start request
my $ua = LWP::UserAgent->new(
    protocols_allowed => ['http'],
    timeout => $ng->timeout
);

my $response = $ua->get($host);

if ($response->is_success) {
    my $content = $response->decoded_content;
    my @lines = split(/\n/, $content);
    for my $line (@lines) {
        next if ($line !~ m/^total/);
        
        # id,slots,size,avail,hits,misses,clogs,ooms,errors,cached,deleted
        my @attrs = split(/,/, $line);
        $perfdata = sprintf(
            "total=%dB avail=%dB hits=%dc misses=%dc clogs=%dc ooms=%dc errors=%dc cached=%dc deleted=%dc",
            $attrs[2],
            $attrs[3],
            $attrs[4],
            $attrs[5],
            $attrs[6],
            $attrs[7],
            $attrs[8],
            $attrs[9],
            $attrs[10]
        );
    }
}
else {
    $np->nagios_exit( CRITICAL, "Can't connect to $host" );
}

$np->nagios_exit(
    $code, 
    sprintf("%s | %s", $msg, $perfdata)
);

